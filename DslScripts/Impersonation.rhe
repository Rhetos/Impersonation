Module Common
{
	Action Impersonate
		'(...) =>
		{
			if (string.IsNullOrWhiteSpace(userName))
				throw new ClientException("It is not allowed to call this service method with no parameters provided.");

			_executionContext.LogProvider.GetLogger("Impersonation")
				.Trace(() => "Impersonate: " + _basicUserInfo.UserName + " as " + userName);

			_impersonationContext.CheckUserImpersonatePermission();
			_impersonationContext.CheckImperionatedUserPermissions(userName);
			_impersonationTransport.SetImpersonation(userName);
		}'
	{
		RepositoryUses _impersonationContext 'Impersonation.IImpersonationContext, Impersonation';
	}
}